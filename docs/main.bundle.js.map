{"version":3,"sources":["webpack:///./src/app/_services/users.service.ts","webpack:///./src/app/_models/surrogate.ts","webpack:///./src/app/_models/user.ts","webpack:///./src/app/_services/practices.service.ts","webpack:///./src/app/_services/connections.service.ts","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/guard/auth.guard.ts","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/practice/practice.component.ts","webpack:///./src/app/profile/clear-profile.component.ts","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/registration/registration.component.ts","webpack:///./src/app/steps/steps.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/_services/authentication.ts","webpack:///./src/app/_models/registration.ts","webpack:///./src/app/_services/fake-backend.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/usa-offical/usa-offical.component.ts","webpack:///./src/assets/data/practices.ts","webpack:///./src/assets/data/users.ts","webpack:///./src/polyfills.ts","webpack:///./src/app/dashboard/dashboard.component.scss","webpack:///./src/app/practice/practice.component.scss","webpack:///./src/app/profile/profile.component.scss","webpack:///./src/app/registration/registration.component.scss","webpack:///./src/app/steps/steps.component.scss","webpack:///./src/app/usa-offical/usa-offical.component.scss","webpack:///./src/app/app.component.css","webpack:///./src/app/login/login.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/login/login.component.html","webpack:///./src/app/practice/practice.component.html","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/registration/registration.component.html","webpack:///./src/app/steps/steps.component.html","webpack:///./src/app/usa-offical/usa-offical.component.html"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Http, Response} from '@angular/http';\r\nimport {User} from '../_models/user';\r\nimport {Registration} from '../_models/registration';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UsersService {\r\n\r\n    constructor(private http: Http) {\r\n    }\r\n\r\n    getUsers(): Observable<User[]> {\r\n        return this.http.get('api/users')\r\n            .map((r: Response) => r.json());\r\n    }\r\n\r\n    updateUser(user: User) {\r\n        return this.http.put(`api/users/${user.id}`, JSON.stringify(user))\r\n            .map((r: Response) => r.json());\r\n    }\r\n\r\n    registerUser(registration: Registration) {\r\n        return this.http.post('api/users', registration)\r\n            .map((r: Response) => r.json());\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_services/users.service.ts","import {Provider} from './provider';\r\nimport {User} from './user';\r\nexport class Connection {\r\n    id: number;\r\n    provider: Provider;\r\n    surrogate: Provider;\r\n    user: User;\r\n    status: ConnectionStatus;\r\n    role: EmployeeRole;\r\n\r\n    constructor(values: Object = {}) {\r\n        Object .assign(this, values);\r\n    }\r\n\r\n    public roleName(): string {\r\n        return EmployeeRole[this.role];\r\n    }\r\n}\r\n\r\nexport enum ConnectionStatus {\r\n    'Pending',\r\n    'Approved',\r\n    'Rejected',\r\n    'Canceled'\r\n}\r\n\r\nexport enum SurrogateFunction {\r\n    'EHR',\r\n    'PECOS',\r\n    'NPPES'\r\n}\r\n\r\nexport enum EmployeeRole {\r\n    '- Choose Role -',\r\n    'Authorized Official',\r\n    'Surrogate'\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_models/surrogate.ts","import {Connection} from './surrogate';\r\n\r\nexport class User {\r\n    id: number;\r\n    first_name: string;\r\n    middle_name: string;\r\n    last_name: string;\r\n    email: string;\r\n    title: string;\r\n    suffix: string;\r\n    birth_month: string;\r\n    birth_day: string;\r\n    birth_year: string;\r\n    company_name: string;\r\n    company_title: string;\r\n    address: string;\r\n    address2: string;\r\n    city: string;\r\n    state: string;\r\n    zip: string;\r\n    step: string;\r\n    dashboard_landings: number;\r\n    connections: Connection[];\r\n\r\n    constructor(values: Object = {}) {\r\n        this.connections = [];\r\n        Object.assign(this, values);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_models/user.ts","import {Injectable} from '@angular/core';\r\nimport {Http, Response} from '@angular/http';\r\nimport {Provider} from '../_models/provider';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable()\r\nexport class PracticesService {\r\n\r\n    http: Http;\r\n//    practicesUrl: string = 'assets/data/practices.json';\r\n\r\n    constructor(http: Http) {\r\n        this.http = http;\r\n        console.log('practices constructor');\r\n    }\r\n\r\n    getPractices(): Observable<Provider[]> {\r\n        return this.http.get('api/practices')\r\n            .map((res: Response) => res.json())\r\n            .catch((error: any) => Observable.throw(error.json().error || 'Server error'));\r\n    }\r\n\r\n    // Base Provider Enrollment File\r\n    searchNPI(npi: string) {\r\n        this.http.get('https://data.cms.gov/resource/7b6b-dk5v.json?npi=1023041159');\r\n        /*\r\n         {\r\n         \"enrlmt_id\": \"O20031105000244\",\r\n         \"npi\": \"1023041159\",\r\n         \"org_name\": \"ASSOCIATION OF UNIVERSITY PHYSICIANS\",\r\n         \"pecos_asct_cntl_id\": \"0446162697\",\r\n         \"provider_type_cd\": \"12-70\",\r\n         \"provider_type_desc\": \"PART B SUPPLIER - CLINIC/GROUP PRACTICE\",\r\n         \"state_cd\": \"WA\"\r\n         }\r\n         */\r\n    }\r\n\r\n    // reassignment sub-file\r\n    // https://data.cms.gov/resource/94dn-q7c9.json\r\n\r\n    savePractice(provider: Provider) {\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_services/practices.service.ts","import {Injectable} from '@angular/core';\r\nimport {Http, Response} from '@angular/http';\r\nimport {User} from '../_models/user';\r\nimport {Registration} from '../_models/registration';\r\nimport {Observable} from 'rxjs';\r\nimport {UsersService} from './users.service';\r\nimport {PracticesService} from './practices.service';\r\nimport {Authentication} from './authentication';\r\nimport {Provider} from '../_models/provider';\r\nimport {Connection, EmployeeRole, ConnectionStatus} from '../_models/surrogate';\r\n\r\n@Injectable()\r\nexport class ConnectionsService {\r\n\r\n    private user: User;\r\n\r\n    constructor(private usersService: UsersService,\r\n                private practicesService: PracticesService,\r\n                private authentication: Authentication,\r\n                private http: Http) {\r\n        authentication.currentUser.subscribe((user: User) => this.user = user);\r\n    }\r\n\r\n    connectUser(provider: Provider, role: EmployeeRole) {\r\n        let connection: Connection = new Connection();\r\n        connection.role = role;\r\n        connection.provider = provider;\r\n        connection.status = ConnectionStatus.Pending;\r\n        (this.user.connections = this.user.connections || []).push(connection);\r\n        this.authentication.update(this.user);\r\n        return connection;\r\n    }\r\n\r\n    getUsers(): Observable<User[]> {\r\n        return this.http.get('/api/users')\r\n            .map((r: Response) => r.json());\r\n    }\r\n\r\n    updateUser(user: User) {\r\n        return this.http.put(`/api/users/${user.id}`, JSON.stringify(user))\r\n            .map((r: Response) => r.json());\r\n    }\r\n\r\n    registerUser(registration: Registration) {\r\n        return this.http.post('/api/users', registration)\r\n            .map((r: Response) => r.json());\r\n    }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_services/connections.service.ts","import {Component, OnInit} from '@angular/core';\r\n\r\nimport {Authentication} from '../_services/authentication';\r\nimport {User} from '../_models/user';\r\nimport {EmployeeRole, ConnectionStatus} from '../_models/surrogate';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app-dashboard',\r\n    templateUrl: './dashboard.component.html',\r\n    styleUrls: ['./dashboard.component.scss']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n    static landings: number = 0;\r\n    currentUser: Observable<User>;\r\n\r\n    //  currentUser: User;\r\n    roles: EmployeeRole;\r\n    error: string;\r\n    status: ConnectionStatus;\r\n\r\n    getRoleName(role) {\r\n        return role ? EmployeeRole[role] : '';\r\n    }\r\n\r\n    getConnectionStatus(status) {\r\n        return status ? ConnectionStatus[status] : 'Pending';\r\n    }\r\n\r\n    constructor(private auth: Authentication) {\r\n\r\n    }\r\n\r\n    getLandings(): number {\r\n        return DashboardComponent.landings;\r\n    }\r\n\r\n    ngOnInit() {\r\n        DashboardComponent.landings += 1;\r\n        this.currentUser = this.auth.getUser();\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.component.ts","import {Injectable} from '@angular/core';\r\nimport {CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\r\nimport {Authentication} from '../_services/authentication';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n    constructor(private router: Router) {\r\n    }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n        let loggedIn = !!localStorage.getItem('currentUser');\r\n        if (loggedIn) {\r\n            return true;\r\n        } else {\r\n            this.router.navigate(['/login']);\r\n        }\r\n        return false;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/guard/auth.guard.ts","import {Component, OnInit} from '@angular/core';\r\nimport {Authentication} from '../_services/authentication';\r\nimport {Router, ActivatedRoute} from '@angular/router';\r\nimport {User} from '../_models/user';\r\n\r\n@Component({\r\n    /*  selector: 'app-login', */\r\n    templateUrl: './login.component.html',\r\n    styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n    error: string;\r\n    model: any = {'email': 'user@presencehealth.org', 'password': 'password'};\r\n    returnUrl: string;\r\n\r\n    constructor(private authentication: Authentication,\r\n                private router: Router,\r\n                private route: ActivatedRoute) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || 'steps';\r\n     //   this.returnUrl = (this.returnUrl == 'clear-profile') ? 'steps' : this.returnUrl;\r\n        this.authentication.logout();\r\n    }\r\n\r\n    login(): void {\r\n        this.authentication.login(this.model.email, this.model.password).subscribe(\r\n            (user: User) => {\r\n                this.router.navigate([this.returnUrl]);\r\n            },\r\n            e => {\r\n                this.error = e;\r\n                console.log('error', e);\r\n            },\r\n            () => {\r\n                console.log('complete?');\r\n            }\r\n        );\r\n        return null;\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","import {Component, OnInit, Input} from '@angular/core';\r\nimport {Provider} from '../_models/provider';\r\nimport {PracticesService} from '../_services/practices.service';\r\nimport {SurrogateFunction} from '../_models/surrogate';\r\nimport {Observable} from 'rxjs';\r\nimport {ConnectionsService} from '../_services/connections.service';\r\nimport {Connection, EmployeeRole} from '../_models/surrogate';\r\nimport {Router} from '@angular/router';\r\nimport {Authentication} from '../_services/authentication';\r\nimport {User} from '../_models/user';\r\nimport {UsersService} from \"../_services/users.service\";\r\n\r\n@Component({\r\n    selector: 'app-practice',\r\n    templateUrl: './practice.component.html',\r\n    styleUrls: ['./practice.component.scss'],\r\n})\r\nexport class PracticeComponent implements OnInit {\r\n\r\n    connected = false;\r\n    providers; // Observable<Provider>;\r\n\r\n    @Input()\r\n    user: User;\r\n    connection: Connection;\r\n\r\n    roles = ['- Choose Role -', 'Authorized Official', 'Surrogate'];\r\n    rolesEnum = EmployeeRole;\r\n\r\n    model: any = {\r\n        status: 0,\r\n        role: 0,\r\n        npi: '',\r\n    };\r\n\r\n    search() {\r\n        console.log(this.model.query);\r\n        this.practicesService.getPractices()\r\n            .subscribe(providers => this.providers = providers);\r\n    }\r\n\r\n\r\n    connect(provider, type) {\r\n        this.connected = true;\r\n        console.log(this.model);\r\n        this.connectionsService.connectUser(provider, type);\r\n        this.router.navigate(['/dashboard']);\r\n    }\r\n\r\n    constructor(\r\n                private connectionsService: ConnectionsService,\r\n                private practicesService: PracticesService,\r\n                private authentication: Authentication,\r\n                private router: Router) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.authentication.currentUser.subscribe((user: User) => {\r\n            this.user = user;\r\n        });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/practice/practice.component.ts","import {Component, OnInit, Input} from '@angular/core';\r\n\r\nimport {User} from '../_models/user';\r\nimport {UsersService} from '../_services/users.service';\r\nimport {Authentication} from '../_services/authentication';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-clear-profile',\r\n    template: `<section class=\"usa-grid usa-section\">\r\n    <h2>User data cleared</h2>\r\n    <p><a class=\"usa-button\" routerLink=\"/login\">Login</a></p>\r\n    </section>`\r\n})\r\nexport class ClearProfileComponent implements OnInit {\r\n\r\n    error: string;\r\n\r\n    constructor(private authentication: Authentication,\r\n                private router: Router) {\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.authentication.reset();\r\n    //    this.authentication.logout();\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/profile/clear-profile.component.ts","import {Component, OnInit, Input} from '@angular/core';\r\n\r\nimport {User} from '../_models/user';\r\nimport {UsersService} from '../_services/users.service';\r\nimport {Authentication} from '../_services/authentication';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-profile',\r\n    templateUrl: './profile.component.html',\r\n    styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n\r\n    @Input()\r\n    user: User;\r\n    error: string;\r\n    redirect: string;\r\n\r\n    constructor(private usersService: UsersService,\r\n                private authentication: Authentication,\r\n                private router: Router) {\r\n    }\r\n\r\n\r\n    onSubmit() {\r\n        // if submitting profile for the first time, redirect back to the steps page.\r\n        if (this.user.step === 'profile') {\r\n            this.user.step = 'connect';\r\n            this.redirect = '/steps';\r\n            // Otherwise redirect to the dashboard.\r\n        } else {\r\n            this.redirect = '/dashboard';\r\n        }\r\n        this.usersService.updateUser(this.user)\r\n            .subscribe(\r\n                () => {\r\n                    console.log('success');\r\n                    // this.router.navigate(['/dashboard']);\r\n                    this.router.navigate([this.redirect]);\r\n                },\r\n                (e: any) => this.error = 'Error updating'\r\n            );\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.authentication.currentUser.subscribe(\r\n            (user: User) => {\r\n                this.user = user;\r\n            });\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/profile/profile.component.ts","import {Component, OnInit} from '@angular/core';\r\nimport {UsersService} from '../_services/users.service';\r\nimport {Registration} from '../_models/registration';\r\nimport {Authentication} from '../_services/authentication';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-registration',\r\n    templateUrl: './registration.component.html',\r\n    styleUrls: ['./registration.component.scss']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n    registration: Registration = new Registration();\r\n    error: string;\r\n\r\n    constructor(private usersService: UsersService,\r\n                private authentication: Authentication,\r\n                private router: Router) {\r\n    }\r\n\r\n    register() {\r\n        this.usersService.registerUser(this.registration).subscribe(\r\n            () => {\r\n                // login on successful registration\r\n                this.authentication.login(this.registration.email, this.registration.password)\r\n                    .subscribe(() => this.router.navigate(['/profile']));\r\n            },\r\n            e => {\r\n                this.error = e;\r\n                console.log('error', e);\r\n            });\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/registration/registration.component.ts","import { Component, OnInit } from '@angular/core';\r\nimport {Authentication} from '../_services/authentication';\r\nimport {User} from '../_models/user';\r\n\r\n@Component({\r\n  selector: 'app-steps',\r\n  templateUrl: './steps.component.html',\r\n  styleUrls: ['./steps.component.scss']\r\n})\r\nexport class StepsComponent implements OnInit {\r\n\r\n  currentUser: User;\r\n\r\n  constructor(private auth: Authentication) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.auth.currentUser.subscribe(\r\n        (user: User) => {\r\n          this.currentUser = user;\r\n        });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/steps/steps.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `angular-cli.json`.\r\n\r\nexport const environment = {\r\n    production: false,\r\n    baseUrl: '/'\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 453;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 453\n// module chunks = 1","import './polyfills.ts';\r\n\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { environment } from './environments/environment';\r\nimport { AppModule } from './app/app.module';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport 'rxjs/add/observable/of';\r\nimport {Subject, BehaviorSubject} from 'rxjs';\r\nimport {User} from '../_models/user';\r\nimport {UsersService} from '../_services/users.service';\r\nimport {Response, Http} from '@angular/http';\r\n\r\n@Injectable()\r\nexport class Authentication {\r\n\r\n    currentUser: BehaviorSubject<User> = new BehaviorSubject<User>(null);\r\n    error: string;\r\n\r\n    getUser(): Observable<User> {\r\n        return this.currentUser.asObservable();\r\n    }\r\n\r\n    constructor(private http: Http, private usersService: UsersService) {\r\n        this.currentUser.subscribe((user: User) => console.log('updating user', user));\r\n        this.currentUser.next(JSON.parse(localStorage.getItem('currentUser')));\r\n    }\r\n\r\n    update(data) {\r\n        let updated = Object.assign({}, this.currentUser.getValue(), data);\r\n        localStorage.setItem('currentUser', JSON.stringify(updated));\r\n        this.currentUser.next(updated);\r\n    }\r\n\r\n    reset() {\r\n        // todo: we should be clearing local storage, not assigning blank data to local storage\r\n        let old: User = this.currentUser.getValue();\r\n        let cleared: User = new User({id: old.id, email: old.email, step: old.step});\r\n\r\n//        this.currentUser.next(cleared);\r\n        this.usersService.updateUser(cleared).subscribe((user: User) => {\r\n            this.currentUser.next(user);\r\n        });\r\n    }\r\n\r\n    login(email: string, password: string) {\r\n        return this.http.post('api/authenticate', {email: email, password: password})\r\n            .map((r: Response) => {\r\n                let user = r.json();\r\n                if (user && user.token) {\r\n                    localStorage.setItem('currentUser', JSON.stringify(user));\r\n                    this.currentUser.next(user);\r\n                    return Observable.of(user);\r\n                }\r\n            })\r\n            .catch((error: any) => Observable.throw('Authentication error'));\r\n    }\r\n\r\n    logout() {\r\n        this.currentUser.next(null);\r\n        localStorage.removeItem('currentUser');\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_services/authentication.ts","export class Registration {\r\n    email: string;\r\n    password: string;\r\n    password2: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_models/registration.ts","import {Http, BaseRequestOptions, Response, ResponseOptions, RequestMethod, XHRBackend} from '@angular/http';\r\nimport {MockBackend, MockConnection} from '@angular/http/testing';\r\nimport {Injectable, Provider} from '@angular/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {DATA_USERS} from '../../assets/data/users';\r\nimport {DATA_PRACTICES} from '../../assets/data/practices';\r\n\r\n/**\r\n * lifted from https://github.com/cornflourblue/angular2-registration-login-example/blob/master/app/_helpers/fake-backend.ts\r\n */\r\n\r\nexport function fakeBackendFactory(backend: MockBackend, options: BaseRequestOptions): Http {\r\n    // array in local storage for registered users\r\n    let users: any[] = JSON.parse(localStorage.getItem('users'));\r\n    console.log('users from localstorage:', users);\r\n    if (!users) {\r\n        users = DATA_USERS;\r\n        console.log('users set in localstorage', users);\r\n        localStorage.setItem('users', JSON.stringify(users));\r\n    }\r\n    let practices: any[] = JSON.parse(localStorage.getItem('practices'));\r\n    console.log('practices from localStorage:', practices);\r\n    if (!practices) {\r\n        practices = DATA_PRACTICES;\r\n        localStorage.setItem('practices', JSON.stringify(practices));\r\n    }\r\n\r\n// configure fake backend\r\n    backend.connections.subscribe((connection: MockConnection) => {\r\n        // wrap in timeout to simulate server api call\r\n        let url: string = connection.request.url;\r\n        let methodName: string = RequestMethod[connection.request.method];\r\n        let method: number = connection.request.method;\r\n        console.log(`${methodName}: ${url}`, connection.request.getBody());\r\n\r\n        function hasToken(): boolean {\r\n//                return connection.request.headers.get('Authorization') === 'Bearer fake-jwt-token';\r\n            return true;\r\n        }\r\n\r\n        function respondUnauthorized(): void {\r\n            console.log('unauthorized');\r\n            connection.mockRespond(new Response(new ResponseOptions({status: 401})));\r\n        }\r\n\r\n        setTimeout(() => {\r\n\r\n            // authenticate\r\n            if (url.endsWith('api/authenticate') && method === RequestMethod.Post) {\r\n                // get parameters from post request\r\n                let params = JSON.parse(connection.request.getBody());\r\n\r\n                // find if any user matches login credentials\r\n                let filteredUsers = users.filter(user => {\r\n                    return user.email === params.email && user.password === params.password;\r\n                });\r\n\r\n                if (filteredUsers.length) {\r\n                    // if login details are valid return 200 OK with user details and fake jwt token\r\n                    let user = filteredUsers[0];\r\n                    console.log('successful auth');\r\n                    connection.mockRespond(new Response(new ResponseOptions({\r\n                        status: 200,\r\n                        body: Object.assign(user, {token: 'fake-jwt-token'})\r\n                    })));\r\n                    return;\r\n                } else {\r\n                    // else return 400 bad request\r\n                    connection.mockError(new Error('Username or password is incorrect'));\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // get practices\r\n            if (url.endsWith('api/practices') && method === RequestMethod.Get) {\r\n                if (hasToken()) {\r\n                    console.log(practices);\r\n                    connection.mockRespond(new Response(new ResponseOptions({status: 200, body: practices})));\r\n                    return;\r\n                } else {\r\n                    respondUnauthorized();\r\n                    return;\r\n                }\r\n            }\r\n            // get users\r\n            if (url.endsWith('api/users') && method === RequestMethod.Get) {\r\n                if (hasToken()) {\r\n                    connection.mockRespond(new Response(new ResponseOptions({status: 200, body: users})));\r\n                    return;\r\n                } else {\r\n                    respondUnauthorized();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // get user by id\r\n            if (url.match(/api\\/users\\/\\d+$/)) {\r\n                if (hasToken()) {\r\n                    // find user by id in users array\r\n                    let urlParts = url.split('/');\r\n                    let id = parseInt(urlParts[urlParts.length - 1], 10);\r\n                    let matchedUsers = users.filter(user => {\r\n                        return user.id === id;\r\n                    });\r\n                    let user = matchedUsers.length ? matchedUsers[0] : null;\r\n                    if (!user) {\r\n                        connection.mockError(new Error('Not found'));\r\n                        return;\r\n                    }\r\n\r\n                    if (method === RequestMethod.Get) {\r\n                        // respond 200 OK with user\r\n                        connection.mockRespond(new Response(new ResponseOptions({status: 200, body: user})));\r\n                        return;\r\n                    }\r\n                    if (method === RequestMethod.Put) {\r\n//                        Object.assign(user, JSON.parse(connection.request.getBody()));\r\n                        user = JSON.parse(connection.request.getBody());\r\n                        localStorage.setItem('users', JSON.stringify(users));\r\n                        localStorage.setItem('currentUser', JSON.stringify(user));\r\n                        connection.mockRespond(new Response(new ResponseOptions({status: 200, body: user})));\r\n                        return;\r\n                    }\r\n                    if (method === RequestMethod.Delete) {\r\n                        users.splice(users.indexOf(user), 1);\r\n                        localStorage.setItem('users', JSON.stringify(users));\r\n                        connection.mockRespond(new Response(new ResponseOptions({status: 200})));\r\n                        return;\r\n                    }\r\n                } else {\r\n                    // return 401 not authorised if token is null or invalid\r\n                    respondUnauthorized();\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // create user\r\n            if (url.endsWith('api/users') && method === RequestMethod.Post) {\r\n                // get new user object from post body\r\n                let newUser = JSON.parse(connection.request.getBody());\r\n\r\n                // validation\r\n                let duplicateUser = users.filter(user => {\r\n                    return user.email === newUser.email;\r\n                }).length;\r\n                if (duplicateUser) {\r\n                    return connection.mockError(new Error('Email \"' + newUser.email + '\" is already taken'));\r\n                }\r\n\r\n                // save new user\r\n                newUser.id = users.length + 1;\r\n                users.push(newUser);\r\n                localStorage.setItem('users', JSON.stringify(users));\r\n\r\n                // respond 200 OK\r\n                connection.mockRespond(new Response(new ResponseOptions({status: 200})));\r\n                return;\r\n            }\r\n\r\n        }, 500);\r\n\r\n    });\r\n\r\n    return new Http(backend, options);\r\n}\r\n\r\nexport let fakeBackendProvider = {\r\n    // use fake backend in place of Http service for backend-less development\r\n    provide: Http,\r\n    useFactory: fakeBackendFactory,\r\n    deps: [MockBackend, BaseRequestOptions]\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/_services/fake-backend.ts","import {RouterModule, Routes} from '@angular/router';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegistrationComponent} from './registration/registration.component';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {ClearProfileComponent} from './profile/clear-profile.component';\r\nimport {AuthGuard} from './guard/auth.guard';\r\nimport {DashboardComponent} from './dashboard/dashboard.component';\r\nimport {StepsComponent} from './steps/steps.component';\r\nimport {PracticeComponent} from './practice/practice.component';\r\nimport {NgModule} from '@angular/core';\r\n\r\nconst appRoutes: Routes = [\r\n    {path: 'login', component: LoginComponent},\r\n    {path: 'register', component: RegistrationComponent},\r\n    {path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\r\n    {path: 'clear-profile', component: ClearProfileComponent, canActivate: [AuthGuard]},\r\n    {path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]},\r\n    {path: 'steps', component: StepsComponent, canActivate: [AuthGuard]},\r\n    {path: 'practice', component: PracticeComponent, canActivate: [AuthGuard]},\r\n    {path: '', redirectTo: 'dashboard', pathMatch: 'full'},\r\n    {path: '*', redirectTo: 'login'}\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(appRoutes, {useHash: true})\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class AppRoutingModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","import {Component, OnInit, Injectable} from '@angular/core';\r\nimport {Authentication} from './_services/authentication';\r\nimport {Router} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {User} from './_models/user';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.css']\r\n})\r\n@Injectable()\r\nexport class AppComponent implements OnInit {\r\n    currentUser: Observable<User>;\r\n\r\n    constructor(private authentication: Authentication, private router: Router) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.currentUser = this.authentication.getUser();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import {BrowserModule} from '@angular/platform-browser';\r\nimport {NgModule} from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {HttpModule, BaseRequestOptions} from '@angular/http';\r\nimport {RouterModule, Routes, Route} from '@angular/router';\r\nimport {MockBackend, MockConnection} from '@angular/http/testing';\r\n\r\nimport {AppComponent} from './app.component';\r\nimport {UsaOfficalComponent} from './usa-offical/usa-offical.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {RegistrationComponent} from './registration/registration.component';\r\nimport {ProfileComponent} from './profile/profile.component';\r\nimport {ClearProfileComponent} from './profile/clear-profile.component';\r\nimport {Authentication} from './_services/authentication';\r\nimport {AuthGuard} from './guard/auth.guard';\r\nimport {DashboardComponent} from './dashboard/dashboard.component';\r\nimport {StepsComponent} from './steps/steps.component';\r\nimport {PracticeComponent} from './practice/practice.component';\r\nimport {PracticesService} from './_services/practices.service';\r\nimport {fakeBackendProvider} from './_services/fake-backend';\r\nimport {UsersService} from './_services/users.service';\r\nimport {ConnectionsService} from './_services/connections.service';\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {APP_BASE_HREF} from '@angular/common';\r\nimport {environment} from '../environments/environment';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n        UsaOfficalComponent,\r\n        LoginComponent,\r\n        RegistrationComponent,\r\n        ProfileComponent,\r\n        ClearProfileComponent,\r\n        DashboardComponent,\r\n        StepsComponent,\r\n        PracticeComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        FormsModule,\r\n        HttpModule,\r\n        AppRoutingModule\r\n    ],\r\n    providers: [\r\n        Authentication,\r\n        UsersService,\r\n        ConnectionsService,\r\n        PracticesService,\r\n        AuthGuard,\r\n        PracticesService,\r\n        fakeBackendProvider,\r\n        MockBackend,\r\n        BaseRequestOptions,\r\n        {provide: APP_BASE_HREF, useValue: environment.baseUrl}\r\n    ],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-usa-offical',\r\n  templateUrl: './usa-offical.component.html',\r\n  styleUrls: ['./usa-offical.component.scss']\r\n})\r\nexport class UsaOfficalComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/usa-offical/usa-offical.component.ts","export const DATA_PRACTICES = [\r\n  {\r\n    'id': 20,\r\n    'name': 'Advocate Bethany Hospital',\r\n    'npi': '32234234'\r\n  },\r\n  {\r\n    'id': 22,\r\n    'name': 'Generations at Elmwood Park',\r\n    'npi': '12341234'\r\n  },\r\n  {\r\n    'id': 20,\r\n    'name': 'Kindred Hospital - Sycamore',\r\n    'npi': '32234234'\r\n  },\r\n  {\r\n    'id': 19,\r\n    'name': 'Presence Holy Family Medical Center',\r\n    'npi': '32234234'\r\n  },\r\n  {\r\n    'id': 23,\r\n    'name': 'Presence Resurection Medical Center',\r\n    'npi': '435252323'\r\n  },\r\n  {\r\n    'id': 24,\r\n    'name': 'Presence Saint Francis Hospital',\r\n    'npi': '23423423'\r\n  },\r\n  {\r\n    'id': 25,\r\n    'name': 'Presence Saint Joseph Hospital - Chicago',\r\n    'npi': '4352524'\r\n  },\r\n  {\r\n    'id': 26,\r\n    'name': 'Presence Saints Mary and Elizabeth Medical Center - Saint Elizabeth Campus',\r\n    'npi': '23425523'\r\n  },\r\n  {\r\n    'id': 27,\r\n    'name': 'Presence Saints Mary and Elizabeth Medical Center - Saint Mary Campus',\r\n    'npi': '234261613'\r\n  },\r\n  {\r\n    'id': 21,\r\n    'name': 'RML Speciality Hospital',\r\n    'npi': '12304182'\r\n  }\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/assets/data/practices.ts","import {Injectable} from '@angular/core';\r\n\r\nexport const DATA_USERS = [\r\n  {\r\n    'id': 1,\r\n    'email': 'user@presencehealth.org',\r\n    'password': 'password',\r\n    'title': '',\r\n    'first_name': '',\r\n    'middle_name': '',\r\n    'last_name': '',\r\n    'suffix': '',\r\n    'company_name': '',\r\n    'company_title': '',\r\n    'address': '',\r\n    'city': '',\r\n    'state': '',\r\n    'zip': '',\r\n    'step': 'profile',\r\n    'connections': [\r\n      {\r\n        'role': '1',\r\n        'provider': {\r\n          'id': 19,\r\n          'name': 'Presence Holy Family Medical Center',\r\n          'npi': '32234234'\r\n        },\r\n        'status': 1\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    'id': 2,\r\n    'email': 'debra@test.com',\r\n    'password': 'test',\r\n    'first_name': 'Debra',\r\n    'last_name': 'Tester',\r\n    'company_name': 'Test Company',\r\n    'title': '',\r\n    'address': '1222 E Washington Ave.',\r\n    'city': 'Madison',\r\n    'state': 'WI',\r\n    'zip': '55104',\r\n    'company_title': 'Director of Case Management',\r\n    'birth_month': 5,\r\n    'birth_day': 5,\r\n    'birth_year': 1981,\r\n    'step': 'connect'\r\n  },\r\n  {\r\n    'id': 1,\r\n    'email': 'debra@test.com',\r\n    'password': 'test',\r\n    'first_name': 'Debra',\r\n    'last_name': 'Tester',\r\n    'company_name': 'Test Company',\r\n    'title': '',\r\n    'address': '1222 E Washington Ave.',\r\n    'city': 'Madison',\r\n    'state': 'WI',\r\n    'zip': '55104',\r\n    'token': 'fake-jwt-token',\r\n    'company_title': 'Director of Case Management',\r\n    'birth_month': 5,\r\n    'birth_day': 5,\r\n    'birth_year': 1981,\r\n    'step': 'dashboard',\r\n    'connections': [\r\n      {\r\n        'role': '1',\r\n        'provider': {\r\n          'id': 19,\r\n          'name': 'practice 1',\r\n          'npi': '32234234234'\r\n        },\r\n        'status': 0\r\n      }\r\n    ]\r\n  }\r\n];\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/assets/data/users.ts","// This file includes polyfills needed by Angular 2 and is loaded before\r\n// the app. You can add your own extra polyfills to this file.\r\nimport 'core-js/es6/symbol';\r\nimport 'core-js/es6/object';\r\nimport 'core-js/es6/function';\r\nimport 'core-js/es6/parse-int';\r\nimport 'core-js/es6/parse-float';\r\nimport 'core-js/es6/number';\r\nimport 'core-js/es6/math';\r\nimport 'core-js/es6/string';\r\nimport 'core-js/es6/date';\r\nimport 'core-js/es6/array';\r\nimport 'core-js/es6/regexp';\r\nimport 'core-js/es6/map';\r\nimport 'core-js/es6/set';\r\nimport 'core-js/es6/reflect';\r\n\r\nimport 'core-js/es7/reflect';\r\nimport 'zone.js/dist/zone';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.scss\n// module id = 731\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/practice/practice.component.scss\n// module id = 732\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/profile/profile.component.scss\n// module id = 733\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/registration/registration.component.scss\n// module id = 734\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/steps/steps.component.scss\n// module id = 735\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/usa-offical/usa-offical.component.scss\n// module id = 736\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 737\n// module chunks = 1","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = 738\n// module chunks = 1","module.exports = \"<app-usa-offical></app-usa-offical>\\r\\n<header class=\\\"usa-header usa-header-extended\\\" role=\\\"banner\\\">\\r\\n\\r\\n  <div class=\\\"usa-navbar\\\">\\r\\n    <button class=\\\"usa-menu-btn\\\">Menu</button>\\r\\n    <div class=\\\"usa-logo\\\" id=\\\"logo\\\">\\r\\n      <em class=\\\"usa-logo-text\\\"><a href=\\\"#\\\" accesskey=\\\"1\\\" title=\\\"Home\\\" aria-label=\\\"Home\\\">Quality Payment Program</a></em>\\r\\n    </div>\\r\\n  </div>\\r\\n  <nav role=\\\"navigation\\\" class=\\\"usa-nav\\\">\\r\\n    <div class=\\\"usa-nav-inner\\\">\\r\\n      <button class=\\\"usa-nav-close\\\">\\r\\n        <img src=\\\"assets/img/close.svg\\\" alt=\\\"close\\\">\\r\\n      </button>\\r\\n      <ul *ngIf=\\\"(currentUser|async)\\\" class=\\\"usa-nav-primary usa-accordion\\\">\\r\\n        <li>\\r\\n          <a class=\\\"usa-nav-link\\\" routerLink=\\\"/dashboard\\\">\\r\\n            <span>Dashboard</span>\\r\\n          </a>\\r\\n        </li>\\r\\n        <li>\\r\\n          <a class=\\\"usa-nav-link\\\" routerLink=\\\"/clear-profile\\\">\\r\\n            <span>Clear Profile</span>\\r\\n          </a>\\r\\n        </li>\\r\\n      </ul>\\r\\n      <div class=\\\"usa-nav-secondary\\\">\\r\\n        <form class=\\\"usa-search usa-search-small js-search-form\\\">\\r\\n          <div role=\\\"search\\\">\\r\\n            <label class=\\\"usa-sr-only\\\" for=\\\"search-field-small\\\">Search small</label>\\r\\n            <input id=\\\"search-field-small\\\" type=\\\"search\\\" name=\\\"search\\\">\\r\\n            <button type=\\\"submit\\\">\\r\\n              <span class=\\\"usa-sr-only\\\">Search</span>\\r\\n            </button>\\r\\n          </div>\\r\\n        </form>\\r\\n        <ul class=\\\"usa-unstyled-list usa-nav-secondary-links\\\">\\r\\n          <li class=\\\"js-search-button-container\\\">\\r\\n            <button class=\\\"usa-header-search-button js-search-button\\\">Search</button>\\r\\n          </li>\\r\\n          <li>\\r\\n            <a *ngIf=\\\"(currentUser|async)\\\" routerLink=\\\"/profile\\\">Logged in as {{(currentUser|async).email}}</a>\\r\\n            <a *ngIf=\\\"!(currentUser|async)\\\" routerLink=\\\"/login\\\">Login</a>\\r\\n          </li>\\r\\n          <li *ngIf=\\\"currentUser|async\\\"><a routerLink=\\\"/login\\\">Log Out</a></li>\\r\\n        </ul>\\r\\n      </div>\\r\\n    </div>\\r\\n  </nav>\\r\\n</header>\\r\\n\\r\\n<div class=\\\"usa-overlay\\\"></div>\\r\\n<main id=\\\"main-content\\\" role=\\\"main\\\">\\r\\n  <router-outlet></router-outlet>\\r\\n</main>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 774\n// module chunks = 1","module.exports = \"<section class=\\\"usa-grid usa-section\\\">\\r\\n  <div class=\\\"usa-width-one-third\\\">\\r\\n    <div class=\\\"usa-hero-callout usa-section-dark\\\">\\r\\n      <h2>{{(currentUser|async).first_name}} {{(currentUser|async).last_name}}</h2>\\r\\n      <p>{{(currentUser|async).company_name}}<br/>{{(currentUser|async).company_title}}</p>\\r\\n      <hr/>\\r\\n      <p>{{(currentUser|async).address}}<br/>{{(currentUser|async).city}}, {{(currentUser|async).state}} {{(currentUser|async).zip}}</p>\\r\\n      <button>Change Password</button>\\r\\n      <button routerLink=\\\"/profile\\\">Edit Profile</button>\\r\\n      <button><a class=\\\"usa-color-text-white text-decoration-none\\\" [routerLink]=\\\"['/dashboard']\\\" fragment=\\\"your-connections\\\">Manage Connections</a></button>\\r\\n      <button><a class=\\\"usa-color-text-white text-decoration-none\\\" [routerLink]=\\\"['/dashboard']\\\" fragment=\\\"your-connections\\\">Manage Users</a></button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"usa-width-two-thirds\\\">\\r\\n    <div class=\\\"usa-alert usa-alert-success\\\" *ngIf=\\\"(currentUser|async).connections != 0\\\" role=\\\"alertdialog\\\">\\r\\n      <div class=\\\"usa-alert-body\\\">\\r\\n        <h3 class=\\\"usa-alert-heading\\\">Your Connection Request is in process.</h3>\\r\\n        <p class=\\\"usa-alert-text\\\">Requests must be approved by the practice. This usually takes 1-3 business days.</p>\\r\\n        <p class=\\\"usa-alert-text\\\">You can view the status of your <a [routerLink]=\\\"['/dashboard']\\\" fragment=\\\"your-connections\\\">connections</a> below or  <a [routerLink]=\\\"['/practice']\\\">search and connect</a> to additional practices.</p>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <h2>Welcome, {{(currentUser|async).first_name}}</h2>\\r\\n    <!-- only show this on first access -->\\r\\n    <!--\\r\\n    <div *ngIf=\\\"(currentUser|async).dashboard_landings < 2\\\">\\r\\n    -->\\r\\n    <div *ngIf=\\\"getLandings() < 2\\\">\\r\\n      <p>Thanks for joining the Quality Payment Program community!</p>\\r\\n      <p>Congratulations on completing your profile and connecting to a medical practice! You're well on your way to successfully using the Quality Payment Program system. We're glad to have you working with us in the quest to provide better care and smarter spending for a healthier America.</p>\\r\\n    </div>\\r\\n    <!-- end only show this on first access -->\\r\\n\\r\\n    <p>Be sure to check out our <a href=\\\"#\\\">Help & Frequently Asked Questions</a> section to learn about the features and programs which will help you get the most out of your QPP experience.</p>\\r\\n\\r\\n    <h2>Your Dashboard</h2>\\r\\n\\r\\n    <h3 id=\\\"your-connections\\\">Connections</h3>\\r\\n    <p>Need to check on the status of your request to connect to a medical practice? Look no further. Check below to see successfully connected practices and those you're still awaiting confirmation from.</p>\\r\\n    <table class=\\\"usa-table-borderless\\\">\\r\\n      <thead>\\r\\n      <tr>\\r\\n        <th scope=\\\"col\\\">Practice</th>\\r\\n        <th scope=\\\"col\\\">NPI</th>\\r\\n        <th scope=\\\"col\\\">Your Role</th>\\r\\n        <th scope=\\\"col\\\">Status</th>\\r\\n      </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n      <tr *ngFor=\\\"let connection of (currentUser|async).connections\\\">\\r\\n        <ng-container *ngIf=\\\"connection.provider\\\">\\r\\n          <th scope=\\\"row\\\">{{connection.provider.name}}</th>\\r\\n          <td>{{connection.provider.npi}}</td>\\r\\n          <td>{{getRoleName(connection.role)}}</td>\\r\\n          <td><span class=\\\"usa-color-text\\\"\\r\\n                    [ngClass]=\\\"{'usa-color-text-green': connection.status === 1,\\r\\n                    'usa-color-text-primary': connection.status != 1}\\\">\\r\\n            {{getConnectionStatus(connection.status)}}</span>\\r\\n        </td>\\r\\n        </ng-container>\\r\\n      </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n    <a class=\\\"usa-button\\\" routerLink=\\\"/practice\\\">Request To Connect To Practice</a>\\r\\n    <hr/>\\r\\n\\r\\n    <h3 id=\\\"your-users\\\">Users</h3>\\r\\n    <div class=\\\"usa-alert usa-alert-warning\\\">\\r\\n      <div class=\\\"usa-alert-body\\\">\\r\\n        <h3 class=\\\"usa-alert-heading\\\">Notice</h3>\\r\\n        <p class=\\\"usa-alert-text\\\">This section is a visual representation of future functionality and is for demonstration purposes only. User management functionality is not yet built and is not part of the acceptance criteria for the current sprint.</p>\\r\\n      </div>\\r\\n    </div>\\r\\n    <p>Need to manage users that can act as a surrogate on behalf of you and the medical practice you manage quality submissions for? Look under Connections to see requests that you can approve or deny. If you need to revoke a user's access, you can also do that from this Dashboard.</p>\\r\\n    <table class=\\\"usa-table-borderless\\\">\\r\\n      <thead>\\r\\n      <tr>\\r\\n        <th scope=\\\"col\\\">Name</th>\\r\\n        <th scope=\\\"col\\\">Practice</th>\\r\\n        <th scope=\\\"col\\\">Type</th>\\r\\n        <th scope=\\\"col\\\">Status</th>\\r\\n        <th scope=\\\"col\\\">Action</th>\\r\\n      </tr>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n      <tr>\\r\\n        <td scope=\\\"row\\\">Sue Nelson</td>\\r\\n        <!-- Maybe set the practice to a practice name that is already connected to the user -->\\r\\n        <td>Presence Saint Francis Hospital</td>\\r\\n        <td>Surrogate</td>\\r\\n        <td><span class=\\\"usa-color-text usa-color-text-green\\\">Approved</span></td>\\r\\n        <td>\\r\\n          <a href=\\\"\\\">Revoke Access</a>\\r\\n        </td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td scope=\\\"row\\\">John Jones</td>\\r\\n        <td>Presence Saint Francis Hospital</td>\\r\\n        <td>Authorized Official</td>\\r\\n        <td><span class=\\\"usa-color-text usa-color-text-primary\\\">Pending</span></td>\\r\\n        <td>\\r\\n          <div class=\\\"button_wrapper\\\">\\r\\n            <button>Approve</button>\\r\\n            <button class=\\\"usa-button-secondary\\\">Deny</button>\\r\\n          </div>\\r\\n        </td>\\r\\n      </tr>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</section>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.html\n// module id = 775\n// module chunks = 1","module.exports = \"<section class=\\\"usa-hero\\\">\\r\\n  <div class=\\\"usa-grid\\\">\\r\\n    <div class=\\\"usa-section\\\">\\r\\n      <div class=\\\"usa-width-one-third\\\">\\r\\n        <div class=\\\"usa-hero-callout usa-section-dark\\\">\\r\\n          <form (ngSubmit)=\\\"f.form.valid && login()\\\" ngForm #f=\\\"ngForm\\\" class=\\\"usa-form\\\">\\r\\n            <fieldset>\\r\\n              <legend class=\\\"usa-drop_text\\\">Sign in</legend>\\r\\n              <span>or <a routerLink=\\\"/register\\\">create an account</a></span>\\r\\n\\r\\n              <div *ngIf=error class=\\\"usa-alert usa-alert-error\\\" role=\\\"alert\\\">\\r\\n                <div class=\\\"usa-alert-body\\\">\\r\\n                  <h3 class=\\\"usa-alert-heading usa-color-text-secondary-dark\\\">Error</h3>\\r\\n                  <p class=\\\"usa-alert-text usa-color-text-secondary-dark\\\">{{error}}, please make sure your email address and password are entered correct</p>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <label for=\\\"email\\\">Email address</label>\\r\\n              <input id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"model.email\\\" #email=\\\"ngModel\\\" type=\\\"text\\\" autocapitalize=\\\"off\\\" autocorrect=\\\"off\\\">\\r\\n\\r\\n              <label for=\\\"password\\\">Password</label>\\r\\n              <input id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"model.password\\\" #password=\\\"ngModel\\\" type=\\\"password\\\">\\r\\n              <p class=\\\"usa-form-note\\\">\\r\\n                <a title=\\\"Show password\\\" href=\\\"javascript:void(0);\\\"\\r\\n                   class=\\\"usa-show_password\\\"\\r\\n                   aria-controls=\\\"password\\\">\\r\\n                  Show password</a>\\r\\n              </p>\\r\\n\\r\\n              <input type=\\\"submit\\\" value=\\\"Sign in\\\"/>\\r\\n              <p><a href=\\\"javascript:void(0);\\\" title=\\\"Forgot email\\\">\\r\\n                Forgot email?</a></p>\\r\\n              <p><a href=\\\"javascript:void(0);\\\" title=\\\"Forgot password\\\">\\r\\n                Forgot password?</a></p>\\r\\n            </fieldset>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"usa-width-two-thirds usa-color-text-white margin-top-1 margin-top-tab-6\\\">\\r\\n        <h1>Quality Payment Program</h1>\\r\\n        <h2>Helping you focus on care quality and the one thing that matters most - <br />making patients healthier.</h2>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</section>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = 776\n// module chunks = 1","module.exports = \"<section class=\\\"usa-grid usa-section\\\">\\r\\n  <!-- Show message if connected to practice -->\\r\\n  <h2>Connect to practice</h2>\\r\\n  <p>Enter the name or NPI of the practice you would like to connect to and click \\\"search\\\"</p>\\r\\n  <p>Don't see the practice you're searching for? <a href=\\\"#\\\">Contact Practice Registrar</a> or call 1-800-NNN-NNNN for\\r\\n    assistance.</p>\\r\\n  <div class=\\\"usa-alert usa-alert-info\\\">\\r\\n    <div class=\\\"usa-alert-body\\\">\\r\\n      <p class=\\\"usa-alert-text\\\">Your request will be in a \\\"pending\\\" state until it is approved by the practice.</p>\\r\\n      <p class=\\\"usa-alert-text\\\">This usually takes 1-3 business days. If you don't want to connect right now, <a\\r\\n              [routerLink]=\\\"['/dashboard']\\\">visit your dashboard</a>.</p>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"usa-grid margin-top-1\\\">\\r\\n    <h6>Practice name or NPI</h6>\\r\\n    <div class=\\\"usa-width-one-half\\\">\\r\\n      <form class=\\\"usa-search usa-search-big\\\">\\r\\n        <div role=\\\"search\\\">\\r\\n          <label class=\\\"usa-sr-only\\\" for=\\\"search-field-big\\\">practice name or NPI</label>\\r\\n          <input id=\\\"search-field-big\\\" type=\\\"search\\\" name=\\\"search\\\" [(ngModel)]=\\\"model.query\\\">\\r\\n          <button type=\\\"submit\\\" (click)=\\\"search()\\\">\\r\\n            <span class=\\\"usa-search-submit-text\\\">Search</span>\\r\\n          </button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"usa-alert usa-alert-success\\\" *ngIf=\\\"connected\\\">\\r\\n    <div class=\\\"usa-alert-body\\\">\\r\\n      <h3 class=\\\"usa-alert-heading\\\">Your Connection Request in in process.</h3>\\r\\n      <p class=\\\"usa-alert-text\\\">All requests must be approved by the practice. This usually takes 1-3 business days.</p>\\r\\n      <p class=\\\"usa-alert-text\\\">In the meantime, you can request to connect to any additional practices you need access\\r\\n        to, or return to the <a [routerLink]=\\\"['/dashboard']\\\">dashboard</a>.</p>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <table class=\\\"usa-table-borderless\\\">\\r\\n    <thead>\\r\\n    <tr>\\r\\n      <th scope=\\\"col\\\">Practice</th>\\r\\n      <th scope=\\\"col\\\">NPI</th>\\r\\n      <th scope=\\\"col\\\">Your Role</th>\\r\\n      <th scope=\\\"col\\\">Connect</th>\\r\\n    </tr>\\r\\n    </thead>\\r\\n    <tbody *ngFor=\\\"let provider of providers\\\">\\r\\n    <tr ngForm=\\\"connectForm\\\" #connectForm=\\\"ngForm\\\">\\r\\n      <th scope=\\\"row\\\" class=\\\"max-width-250\\\">{{provider.name}}</th>\\r\\n      <td>{{provider.npi}}</td>\\r\\n      <td>\\r\\n        <select name=\\\"user-roles\\\" id=\\\"user-role\\\" [(ngModel)]=\\\"model.role\\\">\\r\\n          <option *ngFor=\\\"let role of roles\\\" [value]=\\\"rolesEnum[role]\\\">{{role}}</option>\\r\\n        </select>\\r\\n      </td>\\r\\n\\r\\n      <td>\\r\\n        <button (click)=\\\"connect(provider, model.role)\\\" *ngIf=\\\"model.role\\\">Request to Connect</button>\\r\\n        <span *ngIf=\\\"!model.role\\\" class=\\\"usa-color-text-secondary-dark\\\">Select Role</span>\\r\\n      </td>\\r\\n    </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</section>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/practice/practice.component.html\n// module id = 777\n// module chunks = 1","module.exports = \"<section class=\\\"usa-grid usa-section\\\">\\r\\n  <h2>Create Profile</h2>\\r\\n  <p>Fill in the form below to create your profile.</p>\\r\\n  <p>We respect your privacy and will never sell your personal information. View the <a href=\\\"https://qpp.cms.gov/privacy\\\">CMS Privacy Notice</a> to learn more.\\r\\n  <form #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\r\\n    <div class=\\\"usa-width-one-half\\\">\\r\\n      <div class=\\\"usa-form\\\">\\r\\n        <fieldset>\\r\\n          <legend>Name</legend>\\r\\n\\r\\n          <label for=\\\"title\\\">Title</label>\\r\\n          <input class=\\\"usa-input-tiny\\\" id=\\\"title\\\" name=\\\"title\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.title\\\">\\r\\n          <div class=\\\"usa-input\\\" [ngClass]=\\\"{'usa-input-error': name.invalid && name.touched}\\\">\\r\\n            <label for=\\\"first-name\\\" class=\\\"usa-input-required\\\">First name</label>\\r\\n            <span class=\\\"usa-input-error-message\\\" id=\\\"input-error-message\\\" role=\\\"alert\\\" [hidden]=\\\"name.valid || name.pristine\\\" >Field is required</span>\\r\\n            <input id=\\\"first-name\\\" name=\\\"first-name\\\" type=\\\"text\\\" aria-required=\\\"true\\\"\\r\\n                   [ngClass]=\\\"{'usa-input-success': name.valid}\\\"\\r\\n                   [(ngModel)]=\\\"user.first_name\\\" #name=\\\"ngModel\\\" required>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"usa-input\\\">\\r\\n            <label for=\\\"middle-name\\\">Middle name</label>\\r\\n            <input id=\\\"middle-name\\\" name=\\\"middle-name\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.middle_name\\\">\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"usa-input\\\" [ngClass]=\\\"{'usa-input-error': last_name.invalid && last_name.touched}\\\">\\r\\n            <label for=\\\"last-name\\\" class=\\\"usa-input-required\\\">Last name</label>\\r\\n            <span class=\\\"usa-input-error-message\\\" id=\\\"input-error-message\\\" role=\\\"alert\\\" [hidden]=\\\"last_name.valid || last_name.pristine\\\" >Field is required</span>\\r\\n            <input id=\\\"last-name\\\" name=\\\"last-name\\\" type=\\\"text\\\" aria-required=\\\"true\\\"\\r\\n                   [ngClass]=\\\"{'usa-input-success': last_name.valid}\\\"\\r\\n                   [(ngModel)]=\\\"user.last_name\\\" #last_name=\\\"ngModel\\\" required>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"usa-input\\\">\\r\\n            <label for=\\\"suffix\\\">Suffix</label>\\r\\n            <input class=\\\"usa-input-tiny\\\" id=\\\"suffix\\\" name=\\\"suffix\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.suffix\\\">\\r\\n          </div>\\r\\n        </fieldset>\\r\\n        <fieldset class=\\\"margin-top-2\\\">\\r\\n          <legend>Date of birth</legend>\\r\\n          <span class=\\\"usa-form-hint\\\" id=\\\"dobHint\\\" class=\\\"usa-input-required\\\">For example: 04 28 1986</span>\\r\\n\\r\\n          <div class=\\\"usa-date-of-birth\\\">\\r\\n            <span class=\\\"usa-input-error-message\\\" role=\\\"alert\\\" *ngIf=\\\"(day.invalid || year.invalid || month.invalid) && (month.touched && day.touched && year.touched)\\\" >Field is required</span>\\r\\n            <div class=\\\"usa-form-group usa-form-group-month\\\">\\r\\n              <label for=\\\"date_of_birth_1\\\">Month</label>\\r\\n              <input class=\\\"usa-input-inline\\\" aria-describedby=\\\"dobHint\\\" class=\\\"usa-form-control\\\" id=\\\"date_of_birth_1\\\"\\r\\n                     name=\\\"date_of_birth_1\\\" pattern=\\\"0?[1-9]|1[012]\\\" type=\\\"number\\\" min=\\\"1\\\" max=\\\"12\\\" value=\\\"\\\" placeholder=\\\"4\\\"\\r\\n                     [ngClass]=\\\"{'usa-input-success': month.valid}\\\"\\r\\n                     [(ngModel)]=\\\"user.birth_month\\\" #month=\\\"ngModel\\\" required>\\r\\n            </div>\\r\\n            <div class=\\\"usa-form-group usa-form-group-day\\\">\\r\\n              <label for=\\\"date_of_birth_2\\\">Day</label>\\r\\n              <input class=\\\"usa-input-inline\\\" aria-describedby=\\\"dobHint\\\" class=\\\"usa-form-control\\\" id=\\\"date_of_birth_2\\\"\\r\\n                     name=\\\"date_of_birth_2\\\" pattern=\\\"0?[1-9]|1[0-9]|2[0-9]|3[01]\\\" type=\\\"number\\\" min=\\\"1\\\" max=\\\"31\\\"\\r\\n                     [ngClass]=\\\"{'usa-input-success': day.valid}\\\"\\r\\n                     value=\\\"\\\" [(ngModel)]=\\\"user.birth_day\\\" placeholder=\\\"28\\\" #day=\\\"ngModel\\\" required>\\r\\n            </div>\\r\\n            <div class=\\\"usa-form-group usa-form-group-year\\\">\\r\\n              <label for=\\\"date_of_birth_3\\\">Year</label>\\r\\n              <input class=\\\"usa-input-inline\\\" aria-describedby=\\\"dobHint\\\" class=\\\"usa-form-control\\\" id=\\\"date_of_birth_3\\\"\\r\\n                     name=\\\"date_of_birth_3\\\" pattern=\\\"[0-9]{4}\\\" type=\\\"number\\\" min=\\\"1900\\\" max=\\\"2000\\\" placeholder=\\\"1984\\\" value=\\\"\\\"\\r\\n                     [ngClass]=\\\"{'usa-input-success': year.valid}\\\"\\r\\n                     [(ngModel)]=\\\"user.birth_year\\\" #year=\\\"ngModel\\\" required>\\r\\n            </div>\\r\\n          </div>\\r\\n        </fieldset>\\r\\n\\r\\n        <fieldset class=\\\"margin-top-2\\\">\\r\\n          <legend>Company</legend>\\r\\n          <div class=\\\"usa-input\\\" [ngClass]=\\\"{'usa-input-error': company.invalid && company.touched}\\\">\\r\\n            <label for=\\\"company\\\" class=\\\"usa-input-required\\\">Company</label>\\r\\n            <span class=\\\"usa-input-error-message\\\" role=\\\"alert\\\" [hidden]=\\\"company.valid || company.pristine\\\" >Field is required</span>\\r\\n            <input id=\\\"company\\\" name=\\\"company\\\" aria-required=\\\"true\\\" type=\\\"text\\\"\\r\\n                   [ngClass]=\\\"{'usa-input-success': company.valid}\\\"\\r\\n                   [(ngModel)]=\\\"user.company_name\\\" #company=\\\"ngModel\\\" required>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"usa-input\\\" [ngClass]=\\\"{'usa-input-error': job_title.invalid && job_title.touched}\\\">\\r\\n            <label for=\\\"job-title\\\" class=\\\"usa-input-required\\\">Job title</label>\\r\\n            <span class=\\\"usa-input-error-message\\\" id=\\\"input-error-message\\\" role=\\\"alert\\\" [hidden]=\\\"job_title.valid || job_title.pristine\\\" >Field is required</span>\\r\\n            <input id=\\\"job-title\\\" name=\\\"job-title\\\" aria-required=\\\"true\\\" type=\\\"text\\\"\\r\\n                   [ngClass]=\\\"{'usa-input-success': job_title.valid}\\\"\\r\\n                   [(ngModel)]=\\\"user.company_title\\\" #job_title=\\\"ngModel\\\" required>\\r\\n          </div>\\r\\n\\r\\n        </fieldset>\\r\\n        <fieldset class=\\\"margin-top-2\\\">\\r\\n          <legend>Mailing address</legend>\\r\\n          <div class=\\\"usa-input\\\" [ngClass]=\\\"{'usa-input-error': address.invalid && address.touched}\\\">\\r\\n            <label for=\\\"mailing-address-1\\\" class=\\\"usa-input-required\\\">Street address 1</label>\\r\\n            <span class=\\\"usa-input-error-message\\\" role=\\\"alert\\\" [hidden]=\\\"address.valid || address.pristine\\\" >Field is required</span>\\r\\n            <input id=\\\"mailing-address-1\\\" name=\\\"mailing-address-1\\\" aria-required=\\\"true\\\" type=\\\"text\\\"\\r\\n                   [ngClass]=\\\"{'usa-input-success': address.valid}\\\"\\r\\n                   [(ngModel)]=\\\"user.address\\\" #address=\\\"ngModel\\\" required>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"usa-input\\\">\\r\\n            <label for=\\\"mailing-address-2\\\">Street address 2</label>\\r\\n            <input id=\\\"mailing-address-2\\\" name=\\\"mailing-address-2\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.address2\\\">\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"usa-input\\\" [ngClass]=\\\"{'usa-input-error': city.invalid && city.touched}\\\">\\r\\n            <label for=\\\"city\\\" class=\\\"usa-input-required\\\">City</label>\\r\\n            <span class=\\\"usa-input-error-message\\\" role=\\\"alert\\\" [hidden]=\\\"city.valid || city.pristine\\\" >Field is required</span>\\r\\n            <input id=\\\"city\\\" name=\\\"city\\\" type=\\\"text\\\" [(ngModel)]=\\\"user.city\\\"\\r\\n                   [ngClass]=\\\"{'usa-input-success': city.valid}\\\"\\r\\n                   aria-required=\\\"true\\\" #city=\\\"ngModel\\\" required>\\r\\n          </div>\\r\\n\\r\\n\\r\\n          <div class=\\\"usa-input\\\">\\r\\n            <label for=\\\"state\\\" class=\\\"usa-input-required\\\">State</label>\\r\\n            <select id=\\\"state\\\" name=\\\"state\\\" [(ngModel)]=\\\"user.state\\\" aria-required=\\\"true\\\"  required>\\r\\n              <option value></option>\\r\\n              <option value=\\\"AL\\\">Alabama</option>\\r\\n              <option value=\\\"AK\\\">Alaska</option>\\r\\n              <option value=\\\"AZ\\\">Arizona</option>\\r\\n              <option value=\\\"AR\\\">Arkansas</option>\\r\\n              <option value=\\\"CA\\\">California</option>\\r\\n              <option value=\\\"CO\\\">Colorado</option>\\r\\n              <option value=\\\"CT\\\">Connecticut</option>\\r\\n              <option value=\\\"DE\\\">Delaware</option>\\r\\n              <option value=\\\"DC\\\">District of Columbia</option>\\r\\n              <option value=\\\"FL\\\">Florida</option>\\r\\n              <option value=\\\"GA\\\">Georgia</option>\\r\\n              <option value=\\\"HI\\\">Hawaii</option>\\r\\n              <option value=\\\"ID\\\">Idaho</option>\\r\\n              <option value=\\\"IL\\\">Illinois</option>\\r\\n              <option value=\\\"IN\\\">Indiana</option>\\r\\n              <option value=\\\"IA\\\">Iowa</option>\\r\\n              <option value=\\\"KS\\\">Kansas</option>\\r\\n              <option value=\\\"KY\\\">Kentucky</option>\\r\\n              <option value=\\\"LA\\\">Louisiana</option>\\r\\n              <option value=\\\"ME\\\">Maine</option>\\r\\n              <option value=\\\"MD\\\">Maryland</option>\\r\\n              <option value=\\\"MA\\\">Massachusetts</option>\\r\\n              <option value=\\\"MI\\\">Michigan</option>\\r\\n              <option value=\\\"MN\\\">Minnesota</option>\\r\\n              <option value=\\\"MS\\\">Mississippi</option>\\r\\n              <option value=\\\"MO\\\">Missouri</option>\\r\\n              <option value=\\\"MT\\\">Montana</option>\\r\\n              <option value=\\\"NE\\\">Nebraska</option>\\r\\n              <option value=\\\"NV\\\">Nevada</option>\\r\\n              <option value=\\\"NH\\\">New Hampshire</option>\\r\\n              <option value=\\\"NJ\\\">New Jersey</option>\\r\\n              <option value=\\\"NM\\\">New Mexico</option>\\r\\n              <option value=\\\"NY\\\">New York</option>\\r\\n              <option value=\\\"NC\\\">North Carolina</option>\\r\\n              <option value=\\\"ND\\\">North Dakota</option>\\r\\n              <option value=\\\"OH\\\">Ohio</option>\\r\\n              <option value=\\\"OK\\\">Oklahoma</option>\\r\\n              <option value=\\\"OR\\\">Oregon</option>\\r\\n              <option value=\\\"PA\\\">Pennsylvania</option>\\r\\n              <option value=\\\"RI\\\">Rhode Island</option>\\r\\n              <option value=\\\"SC\\\">South Carolina</option>\\r\\n              <option value=\\\"SD\\\">South Dakota</option>\\r\\n              <option value=\\\"TN\\\">Tennessee</option>\\r\\n              <option value=\\\"TX\\\">Texas</option>\\r\\n              <option value=\\\"UT\\\">Utah</option>\\r\\n              <option value=\\\"VT\\\">Vermont</option>\\r\\n              <option value=\\\"VA\\\">Virginia</option>\\r\\n              <option value=\\\"WA\\\">Washington</option>\\r\\n              <option value=\\\"WV\\\">West Virginia</option>\\r\\n              <option value=\\\"WI\\\">Wisconsin</option>\\r\\n              <option value=\\\"WY\\\">Wyoming</option>\\r\\n            </select>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"usa-input\\\" [ngClass]=\\\"{'usa-input-error': zip.invalid && zip.touched}\\\">\\r\\n            <label for=\\\"zip\\\" class=\\\"usa-input-required\\\">ZIP</label>\\r\\n            <span class=\\\"usa-input-error-message\\\" role=\\\"alert\\\" [hidden]=\\\"zip.valid || zip.pristine\\\" >Field is required</span>\\r\\n            <input class=\\\"usa-input-medium\\\" id=\\\"zip\\\" name=\\\"zip\\\" type=\\\"text\\\" pattern=\\\"[\\\\d]{5}(-[\\\\d]{4})?\\\"\\r\\n                   data-grouplength=\\\"5,4\\\" data-delimiter=\\\"-\\\" aria-required=\\\"true\\\"\\r\\n                   [ngClass]=\\\"{'usa-input-success': zip.valid}\\\"\\r\\n                   data-politespace [(ngModel)]=\\\"user.zip\\\" #zip=\\\"ngModel\\\" required>\\r\\n          </div>\\r\\n        </fieldset>\\r\\n        <button class=\\\"usa-button usa-button-big\\\" type=\\\"submit\\\">Submit</button>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</section>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/profile/profile.component.html\n// module id = 778\n// module chunks = 1","module.exports = \"<section class=\\\"usa-grid usa-section\\\">\\r\\n  <form class=\\\"usa-form\\\" (ngSubmit)=\\\"f.form.valid && register()\\\" #f=\\\"ngForm\\\">\\r\\n    <fieldset>\\r\\n      <legend class=\\\"usa-drop_text\\\">Create an Account</legend>\\r\\n\\r\\n      <label for=\\\"email\\\">Email address</label>\\r\\n      <input id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"registration.email\\\" #email=\\\"ngModel\\\" type=\\\"text\\\" autocapitalize=\\\"off\\\" autocorrect=\\\"off\\\">\\r\\n\\r\\n      <label for=\\\"password\\\">Password</label>\\r\\n      <input id=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" [(ngModel)]=\\\"registration.password\\\" #password=\\\"ngModel\\\">\\r\\n      <input id=\\\"password2\\\" name=\\\"password2\\\" type=\\\"password\\\" [(ngModel)]=\\\"registration.password2\\\" #password2=\\\"ngModel\\\">\\r\\n      <p class=\\\"usa-form-note\\\">\\r\\n        <a title=\\\"Show password\\\" href=\\\"javascript:void(0);\\\"\\r\\n           class=\\\"usa-show_password\\\"\\r\\n           aria-controls=\\\"password\\\">\\r\\n          Show password</a>\\r\\n      </p>\\r\\n\\r\\n      <input type=\\\"submit\\\" value=\\\"Create\\\" />\\r\\n    </fieldset>\\r\\n  </form>\\r\\n</section>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/registration/registration.component.html\n// module id = 779\n// module chunks = 1","module.exports = \"<section class=\\\"usa-grid usa-section\\\">\\r\\n  <h2 id=\\\"complete-account-steps\\\">Steps to Complete Account</h2>\\r\\n\\r\\n  <input id=\\\"carver\\\" type=\\\"checkbox\\\" name=\\\"historical-figures-1\\\" disabled>\\r\\n\\r\\n  <div class=\\\"usa-alert usa-alert-success\\\">\\r\\n    <div class=\\\"usa-alert-body\\\">\\r\\n      <!-- change message based on what step user is in the process -->\\r\\n      <h3 class=\\\"usa-alert-heading\\\" *ngIf=\\\"currentUser.step == 'profile'\\\">Your account has been verified</h3>\\r\\n      <h3 class=\\\"usa-alert-heading\\\" *ngIf=\\\"currentUser.step == 'connect'\\\">Your profile has been created</h3>\\r\\n      <ul class=\\\"usa-unstyled-list\\\"  role=\\\"stepgroup\\\" aria-labelledby=\\\"complete-account-steps\\\">\\r\\n        <li role=\\\"step\\\">\\r\\n          <input id=\\\"create-account\\\" type=\\\"checkbox\\\" onclick=\\\"this.checked=!this.checked;\\\" checked aria-checked=\\\"true\\\">\\r\\n          <label for=\\\"create-account\\\">Create a new account</label>\\r\\n        </li>\\r\\n        <li role=\\\"step\\\">\\r\\n          <input id=\\\"look-for-account\\\" type=\\\"checkbox\\\" onclick=\\\"this.checked=!this.checked;\\\" checked  aria-checked=\\\"true\\\">\\r\\n          <label for=\\\"look-for-account\\\">Look for the email in your inbox</label>\\r\\n        </li>\\r\\n        <li role=\\\"step\\\">\\r\\n          <input id=\\\"click-verification\\\" type=\\\"checkbox\\\" onclick=\\\"this.checked=!this.checked;\\\" checked aria-checked=\\\"true\\\">\\r\\n          <label for=\\\"click-verification\\\">Click the verification link</label>\\r\\n        </li>\\r\\n\\r\\n        <li role=\\\"step\\\" *ngIf=\\\"currentUser.step == 'profile'\\\">\\r\\n          <input id=\\\"complete-profile\\\" type=\\\"checkbox\\\" routerLink=\\\"/profile\\\" class=\\\"cursor-pointer\\\" aria-checked=\\\"false\\\">\\r\\n          <label for=\\\"complete-profile\\\"><a routerLink=\\\"/profile\\\">Complete profile</a></label>\\r\\n        </li>\\r\\n        <li role=\\\"step\\\" *ngIf=\\\"currentUser.step == 'connect'\\\">\\r\\n          <input id=\\\"complete-profile\\\" type=\\\"checkbox\\\" onclick=\\\"this.checked=!this.checked;\\\" checked aria-checked=\\\"true\\\">\\r\\n          <label for=\\\"complete-profile\\\">Complete profile</label>\\r\\n        </li>\\r\\n        <li role=\\\"step\\\" *ngIf=\\\"currentUser.step == 'connect'\\\">\\r\\n          <input id=\\\"connect-practices\\\" type=\\\"checkbox\\\" routerLink=\\\"/practice\\\" class=\\\"cursor-pointer\\\"  aria-checked=\\\"false\\\">\\r\\n          <label for=\\\"connect-practices\\\"><a routerLink=\\\"/practice\\\">Request to Connect with a Practice</a></label>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"button_wrapper\\\">\\r\\n    <!-- change button style based on what step user is in the process -->\\r\\n    <button class=\\\"usa-button-outline-inverse usa-button-hover\\\" aria-disabled=\\\"true\\\" disabled>\\r\\n      Confirm Account\\r\\n    </button>\\r\\n    <button\\r\\n        [ngClass]=\\\"{'usa-button usa-button-big': currentUser.step === 'profile',\\r\\n        'usa-button-outline-inverse usa-button-hover': currentUser.step != 'profile'}\\\"\\r\\n        routerLink=\\\"/profile\\\" [disabled]=\\\"currentUser.step != 'profile'\\\" [attr.aria-disabled]=\\\"currentUser.step != 'profile'\\\">\\r\\n      Complete Profile\\r\\n    </button>\\r\\n    <button\\r\\n        [ngClass]=\\\"{'usa-button usa-button-big': currentUser.step === 'connect',\\r\\n        'usa-button-outline-inverse usa-button-hover': currentUser.step != 'connect'}\\\"\\r\\n        routerLink=\\\"/practice\\\" [disabled]=\\\"currentUser.step != 'connect'\\\" [attr.aria-disabled]=\\\"currentUser.step != 'connect'\\\">\\r\\n      Request to Connect\\r\\n    </button>\\r\\n  </div>\\r\\n</section>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/steps/steps.component.html\n// module id = 780\n// module chunks = 1","module.exports = \"<div class=\\\"usa-banner\\\">\\r\\n  <div class=\\\"usa-accordion\\\">\\r\\n    <header class=\\\"usa-banner-header\\\">\\r\\n      <div class=\\\"usa-grid usa-banner-inner\\\">\\r\\n        <img src=\\\"assets/img/favicons/favicon-57.png\\\" alt=\\\"U.S. flag\\\">\\r\\n        <p>An official website of the United States government</p>\\r\\n        <button class=\\\"usa-accordion-button usa-banner-button\\\"\\r\\n                aria-expanded=\\\"false\\\" aria-controls=\\\"gov-banner\\\">\\r\\n          <span class=\\\"usa-banner-button-text\\\">Here's how you know</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </header>\\r\\n    <div class=\\\"usa-banner-content usa-grid usa-accordion-content\\\" id=\\\"gov-banner\\\">\\r\\n      <div class=\\\"usa-banner-guidance-gov usa-width-one-half\\\">\\r\\n        <img class=\\\"usa-banner-icon usa-media_block-img\\\" src=\\\"assets/img/icon-dot-gov.svg\\\" alt=\\\"Dot gov\\\">\\r\\n        <div class=\\\"usa-media_block-body\\\">\\r\\n          <p>\\r\\n            <strong>The .gov means it’s official.</strong>\\r\\n            <br>\\r\\n            Federal government websites always use a .gov or .mil domain. Before sharing sensitive information online, make sure you’re on a .gov or .mil site by inspecting your\\r\\n            browser’s address (or “location”) bar.\\r\\n          </p>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"usa-banner-guidance-ssl usa-width-one-half\\\">\\r\\n        <img class=\\\"usa-banner-icon usa-media_block-img\\\" src=\\\"assets/img/icon-https.svg\\\" alt=\\\"SSL\\\">\\r\\n        <div class=\\\"usa-media_block-body\\\">\\r\\n          <p>This site is also protected by an SSL (Secure Sockets Layer) certificate that’s been signed by the U.S. government. The <strong>https://</strong> means all\\r\\n            transmitted data is encrypted — in other words, any information or browsing history that you provide is transmitted securely.</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/usa-offical/usa-offical.component.html\n// module id = 781\n// module chunks = 1"],"sourceRoot":""}